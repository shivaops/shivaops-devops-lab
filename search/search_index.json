{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udd25 ShivaOps DevOps Lab \u2013 Kubernetes Automation on Laptop","text":"<p>Turn your Windows Laptop into a Full DevOps Lab!</p> <p></p> <p>Welcome to the ShivaOps DevOps Lab \u2013 a fully automated Kubernetes-based environment using VirtualBox and Vagrant.</p>"},{"location":"#purpose","title":"\ud83c\udfaf Purpose","text":"<p>This lab simulates a real-world Kubernetes deployment scenario \u2013 all running locally. Great for:</p> <ul> <li>DevOps learners</li> <li>CI/CD practice</li> <li>Interview preparation</li> <li>Home/college labs</li> </ul> <p>\u2705 No cloud required \u2705 No billing risks \u2705 Ideal for experimenting</p>"},{"location":"#why-this-lab","title":"\ud83d\ude80 Why This Lab?","text":"<p>No manual VM installation or configuration required. Everything is fully automated and preconfigured on <code>vagrant up</code>.</p> <p>\u2705 Kubernetes Cluster (1 Master + 2 Workers) \u2705 MetalLB, Ingress Controller, NFS \u2013 all ready \u2705 Git VM prelinked to GitHub with token \u2705 SSH access between all VMs (Kubernetes, Docker, Jenkins, Ansible, NFS Server, Git Server) and your Windows host \u2705 Just apply YAML and access your app from the browser!</p>"},{"location":"#components-overview","title":"\ud83d\udce6 Components Overview","text":"VM Role <code>kmaster</code> Kubernetes Master Node <code>kworker1</code> / <code>kworker2</code> Worker Nodes <code>nfs-vm</code> NFS Server for Dynamic PVC <code>git-vm</code> Git Client, Token Pre-Configured <code>docker-vm</code> (Optional) Build and Push Images"},{"location":"#key-technologies","title":"\u2699\ufe0f Key Technologies","text":"<ul> <li>\ud83d\udd04 Vagrant + VirtualBox Automation</li> <li>\ud83d\udc33 Docker, GitHub, CI/CD Pipeline</li> <li>\u2638\ufe0f Kubernetes + MetalLB + Ingress + NFS</li> <li>\ud83d\udce6 YAML-based Manifest Deployment with Persistent Volumes</li> </ul>"},{"location":"#coming-soon","title":"\ud83e\uddea Coming Soon","text":"<p>\u2705 Full Source Code on GitHub \u2705 YouTube Video Walkthrough on ShivaOps Channel \u2705 Downloadable Vagrant Files + Manifests</p> <p>Stay tuned for updates!!</p>"},{"location":"#brought-to-you-by","title":"\ud83d\ude4c Brought to You By","text":"<p>ShivaOps \u2013 DevOps Learning Series \ud83d\udce7 Email: shivanaik.it@gmail.com  </p> <p>\ud83d\udd17 GitHub: github.com/shivaops \ud83c\udf10 GitHub Pages: shivaops.github.io/shivaops-devops-lab/</p>"},{"location":"app-deployment/","title":"\ud83d\ude80 Application Deployment Highlights","text":"<ul> <li>Node.js app with MySQL database</li> <li>Uses StatefulSets</li> <li>Ingress Controller exposes it on your browser</li> <li>PersistentVolumeClaims (PVC) provisioned automatically by NFS</li> <li>Secrets and ConfigMaps for configuration</li> <li>MetalLB assigns LAN-accessible IP</li> </ul>"},{"location":"architecture/","title":"\ud83e\uddf1 Architecture &amp; Networking","text":""},{"location":"architecture/#components","title":"Components","text":"<p>!!! note     This lab follows best practices for real-world Kubernetes networking.</p> <ul> <li>Kubernetes (Kubeadm, MetalLB, Ingress)</li> <li>Docker + Jenkins + Git + Ansible</li> <li>NFS server with RWX storage class</li> <li>Vagrant automates VM setup</li> </ul>"},{"location":"architecture/#networking-overview","title":"Networking Overview","text":"<pre><code>graph LR\n  HostPC --&gt; VagrantVMs\n  VagrantVMs --&gt;|Vagrantfile| Kubernetes\n  Kubernetes --&gt; NFS[(NFS Storage)]\n  Kubernetes --&gt; MetalLB\n  Kubernetes --&gt; Ingress\n  Ingress --&gt; NodeJSApp\n</code></pre>"},{"location":"architecture/#traffic-flow","title":"Traffic Flow","text":"<p>!!! tip     Use MetalLB for allocating real IPs even in a bare-metal setup.</p> <ul> <li>MetalLB provides external IPs</li> <li>Ingress routes traffic to <code>/app</code></li> <li>Headless service allows MySQL pod discovery</li> </ul>"},{"location":"ci-cd/","title":"\ud83d\udd04 CI/CD Pipeline Integration","text":"<p>This lab includes optional setup for full CI/CD pipelines using Jenkins and Ansible.</p>"},{"location":"ci-cd/#workflow-overview","title":"Workflow Overview","text":"<ol> <li>Developer pushes code to GitHub</li> <li>Docker VM builds the image</li> <li>Image pushed to Docker Hub</li> <li>Kubernetes picks up and updates app via:</li> <li>Manual rollout</li> <li>ArgoCD or Jenkins pipeline (optional)</li> </ol>"},{"location":"kubernetes-setup/","title":"\u2638\ufe0f Kubernetes Setup","text":""},{"location":"kubernetes-setup/#lab-infrastructure","title":"Lab Infrastructure","text":"VM Name Role <code>kmaster</code> Kubernetes master node <code>kworker1</code> Kubernetes worker node <code>kworker2</code> Kubernetes worker node <code>nfs-server</code> Dynamic storage provisioner <code>docker-vm</code> Docker image builder <code>git-vm</code> GitHub code pusher <code>jenkins</code> CI/CD orchestrator (optional) <code>ansible</code> Automation (optional)"},{"location":"kubernetes-setup/#vagrant-automation-highlights","title":"Vagrant Automation Highlights","text":"<ul> <li>Kubernetes Cluster 1.32</li> <li>MetalLB for load balancing</li> <li>Ingress-NGINX for path-based routing</li> <li>NFS for persistent storage</li> <li>All preconfigured using Vagrant + shell scripts</li> </ul>"}]}